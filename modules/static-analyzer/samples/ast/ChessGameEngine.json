{
  "file": "/home/sajad-ahmed/Documents/Semesters/Seventh-Semester/fyp/greencode-ai/modules/static-analyzer/samples/ChessGameEngine.java",
  "classes": [
    {
      "type": "Class",
      "name": "ChessGameEngine",
      "methods": [
        {
          "name": "ChessGameEngine",
          "params": [],
          "loops": [],
          "conditionals": [],
          "modifiers": [
            "public"
          ]
        },
        {
          "name": "initializeBoard",
          "params": [],
          "loops": [
            "for"
          ],
          "conditionals": [],
          "returnType": "void",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "makeMove",
          "params": [
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "conditionalsTree": [
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            },
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                },
                {
                  "type": "Statement"
                },
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            }
          ],
          "returnType": "boolean",
          "modifiers": [
            "public"
          ]
        },
        {
          "name": "isValidMove",
          "params": [
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "conditionalsTree": [
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            },
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            }
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "validatePieceMove",
          "params": [
            {
              "type": "char",
              "name": "piece"
            },
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "switch",
            "case",
            "default",
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "handleSpecialMoves",
          "params": [
            {
              "type": "char",
              "name": "piece"
            },
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [],
          "conditionalsTree": [
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            },
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            },
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            }
          ],
          "returnType": "void",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "isInCheck",
          "params": [
            {
              "type": "boolean",
              "name": "isWhiteKing"
            }
          ],
          "loops": [
            "for"
          ],
          "conditionals": [
            "return"
          ],
          "conditionalsTree": [
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            },
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "IfStatement",
                  "thenBlock": [
                    {
                      "type": "Statement"
                    }
                  ],
                  "elseBlock": null
                }
              ],
              "elseBlock": null
            }
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "isValidPosition",
          "params": [
            {
              "type": "int",
              "name": "row"
            },
            {
              "type": "int",
              "name": "col"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "isWhitePiece",
          "params": [
            {
              "type": "char",
              "name": "piece"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "validatePawnMove",
          "params": [
            {
              "type": "char",
              "name": "piece"
            },
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "validateRookMove",
          "params": [
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "validateKnightMove",
          "params": [
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "validateBishopMove",
          "params": [
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "validateQueenMove",
          "params": [
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "validateKingMove",
          "params": [
            {
              "type": "char",
              "name": "piece"
            },
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "handleCastling",
          "params": [
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "startCol"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [],
          "returnType": "void",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "handlePromotion",
          "params": [
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [],
          "returnType": "void",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "handleEnPassant",
          "params": [
            {
              "type": "int",
              "name": "startRow"
            },
            {
              "type": "int",
              "name": "endRow"
            },
            {
              "type": "int",
              "name": "endCol"
            }
          ],
          "loops": [],
          "conditionals": [],
          "returnType": "void",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "findKing",
          "params": [
            {
              "type": "boolean",
              "name": "isWhiteKing"
            }
          ],
          "loops": [
            "for"
          ],
          "conditionals": [
            "return"
          ],
          "conditionalsTree": [
            {
              "type": "IfStatement",
              "thenBlock": [
                {
                  "type": "Statement"
                }
              ],
              "elseBlock": null
            }
          ],
          "returnType": "int []",
          "modifiers": [
            "private"
          ]
        },
        {
          "name": "getBoard",
          "params": [],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "char [ [] ]",
          "modifiers": [
            "public"
          ]
        },
        {
          "name": "isWhiteTurn",
          "params": [],
          "loops": [],
          "conditionals": [
            "return"
          ],
          "returnType": "boolean",
          "modifiers": [
            "public"
          ]
        }
      ],
      "fields": [
        "private char [ [] ] board;",
        "private boolean isWhiteTurn;",
        "private boolean [] castlingRights;",
        "private int [] enPassantSquare;"
      ]
    }
  ]
}